package cn.zucc.debug.macore.model.pojo;

public class DBSql extends Entity {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column t_dbsql.c_id
     *
     * @mbggenerated
     */
    private Integer id;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column t_dbsql.c_sql_string
     *
     * @mbggenerated
     */
    private String sqlString;

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column t_dbsql.c_id
     *
     * @return the value of t_dbsql.c_id
     *
     * @mbggenerated
     */
    public Integer getId() {
        return id;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column t_dbsql.c_id
     *
     * @param id the value for t_dbsql.c_id
     *
     * @mbggenerated
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column t_dbsql.c_sql_string
     *
     * @return the value of t_dbsql.c_sql_string
     *
     * @mbggenerated
     */
    public String getSqlString() {
        return sqlString;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column t_dbsql.c_sql_string
     *
     * @param sqlString the value for t_dbsql.c_sql_string
     *
     * @mbggenerated
     */
    public void setSqlString(String sqlString) {
        this.sqlString = sqlString == null ? null : sqlString.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_dbsql
     *
     * @mbggenerated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", sqlString=").append(sqlString);
        sb.append("]");
        return sb.toString();
    }
}